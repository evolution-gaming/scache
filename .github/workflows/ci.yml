name: CI

on:
  push:
    branches: [ "master" ]
    tags: ["v*"]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        scala:
#          - 3.2.0
          - 2.13.8
          - 2.12.17

    steps:
      - uses: actions/checkout@v3

      - uses: coursier/cache-action@v6

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'sbt'

      - name: build ${{ matrix.scala }}
        run: sbt ++${{ matrix.scala }} clean coverage test

      - name: test coverage
        if: success()
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: Scala ${{ matrix.scala }}
        run: sbt ++${{ matrix.scala }} coverageReport coverageAggregate coveralls

      - name: slack
        uses: homoluctus/slatify@master
        if: failure() && github.ref == 'refs/heads/master'
        with:
          type: ${{ job.status }}
          job_name: Build
          url: ${{ secrets.SLACK_WEBHOOK }}

  publish:
    name: Publish Artifacts
    needs: [ test ]
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: coursier/cache-action@v6

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: 'sbt'

      - name: Publish artifacts
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USER }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASS }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
        run: sbt ci-release